From 299953a457e9b07bf39b43b01e25546c806ede97 Mon Sep 17 00:00:00 2001
From: Robert Ancell <robert.ancell@canonical.com>
Date: Sun, 15 Mar 2020 08:07:51 +0000
Subject: [PATCH] display: Allow fractional scaling to be enabled

---
 panels/display/cc-display-settings.c  | 64 +++++++++++++++++++++++++++
 panels/display/cc-display-settings.ui | 16 +++++++
 2 files changed, 80 insertions(+)

diff --git a/panels/display/cc-display-settings.c b/panels/display/cc-display-settings.c
index d793fccaa..c4b754334 100644
--- a/panels/display/cc-display-settings.c
+++ b/panels/display/cc-display-settings.c
@@ -29,6 +29,10 @@
 
 #define MAX_SCALE_BUTTONS 5
 
+#define MUTTER_SCHEMA                     "org.gnome.mutter"
+#define MUTTER_EXPERIMENTAL_FEATURES_KEY  "experimental-features"
+#define MUTTER_FEATURE_FRACTIONAL_SCALING "x11-randr-fractional-scaling"
+
 struct _CcDisplaySettings
 {
   GtkDrawingArea    object;
@@ -39,6 +43,7 @@ struct _CcDisplaySettings
   gboolean          has_accelerometer;
   CcDisplayConfig  *config;
   CcDisplayMonitor *selected_output;
+  GSettings        *mutter_settings;
 
   GListStore       *orientation_list;
   GListStore       *refresh_rate_list;
@@ -49,6 +54,8 @@ struct _CcDisplaySettings
   GtkWidget        *resolution_row;
   GtkWidget        *scale_bbox;
   GtkWidget        *scale_row;
+  GtkWidget        *scale_fractional_row;
+  GtkWidget        *scale_fractional_switch;
   GtkWidget        *underscanning_row;
   GtkWidget        *underscanning_switch;
 };
@@ -72,6 +79,48 @@ static void on_scale_btn_active_changed_cb (GtkWidget         *widget,
                                             CcDisplaySettings *self);
 
 
+static gboolean
+get_fractional_scaling_active (GValue *value, GVariant *variant, gpointer user_data)
+{
+  g_autofree const gchar **features = NULL;
+
+  features = g_variant_get_strv (variant, NULL);
+  g_value_set_boolean (value, g_strv_contains (features, MUTTER_FEATURE_FRACTIONAL_SCALING));
+  return TRUE;
+}
+
+static GVariant *
+set_fractional_scaling_active (const GValue *value, const GVariantType *expected_type, gpointer user_data)
+{
+  CcDisplaySettings *self = user_data;
+  gboolean enable;
+  g_auto(GStrv) existing_features = NULL;
+  gboolean have_fractional_scaling = FALSE;
+  g_autoptr(GVariantBuilder) builder = NULL;
+
+  enable = g_value_get_boolean (value);
+
+  /* Add or remove the fractional scaling feature from mutter */
+  existing_features = g_settings_get_strv (self->mutter_settings, MUTTER_EXPERIMENTAL_FEATURES_KEY);
+  builder = g_variant_builder_new (G_VARIANT_TYPE ("as"));
+  for (int i = 0; existing_features[i] != NULL; i++)
+    {
+      if (strcmp (existing_features[i], MUTTER_FEATURE_FRACTIONAL_SCALING) == 0)
+        {
+          if (enable)
+            have_fractional_scaling = TRUE;
+          else
+            continue;
+        }
+
+      g_variant_builder_add (builder, "s", existing_features[i]);
+    }
+  if (enable && !have_fractional_scaling)
+    g_variant_builder_add (builder, "s", MUTTER_FEATURE_FRACTIONAL_SCALING);
+
+  return g_variant_builder_end (builder);
+}
+
 static gboolean
 should_show_rotation (CcDisplaySettings *self)
 {
@@ -242,6 +291,7 @@ cc_display_settings_rebuild_ui (CcDisplaySettings *self)
       gtk_widget_set_visible (self->refresh_rate_row, FALSE);
       gtk_widget_set_visible (self->resolution_row, FALSE);
       gtk_widget_set_visible (self->scale_row, FALSE);
+      gtk_widget_set_visible (self->scale_fractional_row, FALSE);
       gtk_widget_set_visible (self->underscanning_row, FALSE);
 
       return G_SOURCE_REMOVE;
@@ -429,6 +479,8 @@ cc_display_settings_rebuild_ui (CcDisplaySettings *self)
 
   gtk_widget_set_visible (self->scale_row, buttons > 1);
 
+  gtk_widget_set_visible (self->scale_fractional_row, TRUE);
+
   gtk_widget_set_visible (self->underscanning_row,
                           cc_display_monitor_supports_underscanning (self->selected_output) &&
                           !cc_display_config_is_cloning (self->config));
@@ -614,6 +666,7 @@ cc_display_settings_finalize (GObject *object)
   CcDisplaySettings *self = CC_DISPLAY_SETTINGS (object);
 
   g_clear_object (&self->config);
+  g_clear_object (&self->mutter_settings);
 
   g_clear_object (&self->orientation_list);
   g_clear_object (&self->refresh_rate_list);
@@ -671,6 +724,8 @@ cc_display_settings_class_init (CcDisplaySettingsClass *klass)
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, resolution_row);
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, scale_bbox);
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, scale_row);
+  gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, scale_fractional_row);
+  gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, scale_fractional_switch);
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, underscanning_row);
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, underscanning_switch);
 
@@ -685,6 +740,15 @@ cc_display_settings_init (CcDisplaySettings *self)
 {
   gtk_widget_init_template (GTK_WIDGET (self));
 
+  self->mutter_settings = g_settings_new (MUTTER_SCHEMA);
+  g_settings_bind_with_mapping (self->mutter_settings, MUTTER_EXPERIMENTAL_FEATURES_KEY,
+                                self->scale_fractional_switch, "active",
+                                G_SETTINGS_BIND_DEFAULT,
+                                get_fractional_scaling_active,
+                                set_fractional_scaling_active,
+                                self,
+                                NULL);
+
   gtk_list_box_set_header_func (GTK_LIST_BOX (self),
                                 cc_list_box_update_header_func,
                                 NULL, NULL);
diff --git a/panels/display/cc-display-settings.ui b/panels/display/cc-display-settings.ui
index 50ef951b4..9addc3b4f 100644
--- a/panels/display/cc-display-settings.ui
+++ b/panels/display/cc-display-settings.ui
@@ -68,5 +68,21 @@
         </child>
       </object>
     </child>
+    <child>
+      <object class="HdyActionRow" id="scale_fractional_row">
+        <property name="width_request">100</property>
+        <property name="visible">True</property>
+        <property name="can_focus">True</property>
+        <property name="title" translatable="yes" context="display setting">Fractional Scaling</property>
+        <property name="subtitle" translatable="yes" context="display setting">May increase power usage, lower speed, or reduce display sharpness.</property>
+        <child type="action">
+          <object class="GtkSwitch" id="scale_fractional_switch">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="valign">center</property>
+          </object>
+        </child>
+      </object>
+    </child>
   </template>
 </interface>
-- 
2.24.1

